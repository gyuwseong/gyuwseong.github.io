{"componentChunkName":"component---src-templates-post-jsx","path":"/understanding-kubernetes/","result":{"data":{"site":{"siteMetadata":{"title":"gyuwseong"}},"markdownRemark":{"id":"6c7057c7-a535-51a9-9c95-3d394ec0c167","excerpt":"쿠버네티스 쿠버네티스(Kubernetes) 는 으로, 컨테이너 오케스트레이션(container orchestration) 툴이다. 쿠버네티스를 k8s 라고 줄여서 쓰길래 왜 그렇게 쓰나 했더니 이름에서 k 와 s 사이에 글자가 8개라서(...) 이렇게 쓴다고 한다. 쿠버네티스의 특징 서버 자원 클러스터링, 마이크로서비스 구조의 컨테이너 배포, 서비스 장애…","html":"<h2 id=\"쿠버네티스\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4\" aria-label=\"쿠버네티스 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>쿠버네티스</strong></h2>\n<p>쿠버네티스(Kubernetes) 는 <code class=\"language-text\">컨테이너화된 애플리케이션을 자동으로 배포, 관리, 확장할 수 있는 오픈소스 플랫폼</code>으로, 컨테이너 오케스트레이션(container orchestration) 툴이다. 쿠버네티스를 k8s 라고 줄여서 쓰길래 왜 그렇게 쓰나 했더니 이름에서 k 와 s 사이에 글자가 8개라서(...) 이렇게 쓴다고 한다.</p>\n<h3 id=\"쿠버네티스의-특징\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4%EC%9D%98-%ED%8A%B9%EC%A7%95\" aria-label=\"쿠버네티스의 특징 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>쿠버네티스의 특징</strong></h3>\n<ul>\n<li>서버 자원 클러스터링, 마이크로서비스 구조의 컨테이너 배포, 서비스 장애 복구 등 컨테이너 기반의 서비스 운영에 필요한 대부분의 오케스트레이션 기능을 폭넓게 지원한다.</li>\n<li>영속적 볼륨, 스케줄링, 장애 복구, 오토 스케일링 등 컨테이너 기반의 클라우드를 운영할 때 필요한 대부분의 기능과 컴포넌트를 사용자가 직접 커스터마이징 할 수 있다.</li>\n</ul>\n<p> </p>\n<h2 id=\"쿠버네티스-구성-요소\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"쿠버네티스 구성 요소 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>쿠버네티스 구성 요소</strong></h2>\n<p><img src=\"/static/img2-ccc5ba54a8a06ac2a87fe447bb53dcf1.svg\" alt=\"출처: kubernetes.io\"></p>\n<h3 id=\"Pods\" style=\"position:relative;\"><a href=\"#Pods\" aria-label=\"Pods permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>Pods</strong></h3>\n<p>쿠버네티스에서 배포 및 실행이 가능한 가장 작은 구성 요소를 파드라고 한다. 파드는 하나 이상의 컨테이너로 이루어질 수 있고, 보통은 하나로 구성된다.\n<code class=\"language-text\">파드 하나당 고유한 IP 주소가 할당</code>되며 (컨테이너 하나당이 아니다) 같은 파드 내에 있는 컨테이너들은 localhost 로 통신하는데, 이는 각 파드가 하나의 네트워크 네임스페이스를 공유하기 때문이다. 파드의 내부 IP 주소를 통해 파드끼리의 통신이 가능하다. </p>\n<p>파드의 주요한 특성 중 하나는 Ephemeral 하다는 것인데, 해당 단어의 사전적 의미인 수명이 짧다는 뜻에서 알 수 있듯이 <code class=\"language-text\">파드는 일회용이고, 교체 가능한 자원이 되는 목적으로 생성</code>되었기 때문에 리소스 부족이나 장애, 버그로 인해 파드가 중단되면 해당 파드는 새로운 파드로 교체되고, IP 주소도 다시 할당된다.</p>\n<h3 id=\"Service\" style=\"position:relative;\"><a href=\"#Service\" aria-label=\"Service permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>Service</strong></h3>\n<p>서비스는 파드에 변경 사항이 생기면서 IP 주소가 재할당되는 것을 방지하여 파드에 고정적으로 접근할 수 있게끔 한다. 서비스와 파드는 일대일로 연결되어 있는데, 생명 주기는 일치하지 않기 때문에 <code class=\"language-text\">파드가 중단되더라도 서비스와 IP 주소는 변경되지 않게 된다.</code> 또한 서비스는 로드 밸런서 기능을 수행하여 다수의 파드로 트래픽을 분산시키는 역할도 한다.</p>\n<h3 id=\"Ingress\" style=\"position:relative;\"><a href=\"#Ingress\" aria-label=\"Ingress permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>Ingress</strong></h3>\n<p>인그레스는 클러스터 <code class=\"language-text\">외부의 트래픽을 내부 서비스로 전달하는 역할</code>을 하며, 외부 요청의 라우팅 규칙을 설정하여 외부 요청을 어떤 서비스로 라우팅할지 정의한다. 또한 가상 호스트 기반의 요청 처리가 가능하여 같은 IP 에 대해 다른 도메인 이름으로 요청이 도착해도 처리할 수 있다.</p>\n<h3 id=\"ConfigMap\" style=\"position:relative;\"><a href=\"#ConfigMap\" aria-label=\"ConfigMap permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>ConfigMap</strong></h3>\n<p>컨피그맵은 <code class=\"language-text\">공개되어도 되는 환경 변수에 한해 키-값 형식으로 저장하는 데 사용되는 API 오브젝트</code>이다. 컨피그맵을 통해 컨테이너와 환경을 분리하여 관리할 수 있다.\n컨피그맵을 사용하지 않으면서 환경 변수의 값을 변경하기 위해서는 보통 환경 변수가 정의된 파일을 수정 후, 레포지토리에 해당 파일을 푸시, 이미지 재빌드, 재배포하는 과정을 거쳐야 하지만 컨피그맵을 사용한다면 <code class=\"language-text\">컨피그맵 수정만으로도 환경 변수 수정이 가능</code>하다.</p>\n<h3 id=\"Secret\" style=\"position:relative;\"><a href=\"#Secret\" aria-label=\"Secret permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>Secret</strong></h3>\n<p>컨피그맵은 기밀 데이터를 저장할 수 없기 때문에 비밀번호나 API 키 등의 기밀 데이터는 시크릿을 통해 저장한다. 시크릿은 데이터를 base64 인코딩을 통해 저장한다.</p>\n<h3 id=\"Volumes\" style=\"position:relative;\"><a href=\"#Volumes\" aria-label=\"Volumes permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>Volumes</strong></h3>\n<p>컨테이너는 일반적으로 stateless 하다. 이러한 특성 덕분에 이식성이 뛰어나지만, 앱의 특성에 따라 데이터를 저장해야 하는 경우도 있다. 이럴 때 사용되는 것이 볼륨인데, k8s 에서 볼륨은 로컬 스토리지 혹은 외부 스토리지로 나뉜다. 단, k8s 에서 데이터를 관리하는 것이 아니기 때문에 주의해야 한다.</p>\n<h3 id=\"ReplicaSet\" style=\"position:relative;\"><a href=\"#ReplicaSet\" aria-label=\"ReplicaSet permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>ReplicaSet</strong></h3>\n<p>레플리카셋은 <code class=\"language-text\">일정 개수의 파드를 유지</code>할 수 있도록 해준다. 정해진 수의 동일한 파드가 항상 실행되도록 관리하고, 장애 등의 이유로 파드가 중단된다면 파드를 재생성한다.</p>\n<p>레플리카셋은 파드 개수를 관리하지만, 실제로 파드와 연결되어 있지는 않다. 파드와 레플리카셋은 <code class=\"language-text\">라벨 셀렉터를 통해 느슨하게 연결</code>되어 있는데, 특정 라벨을 가진 파드의 개수가 정해진 항목의 개수와 일치하지 않는다면 부족한 파드를 생성하게 된다. 만약 파드의 개수가 설정된 값보다 많다면 불필요한 개수만큼의 파드를 삭제하게 된다.</p>\n<h3 id=\"Deployments\" style=\"position:relative;\"><a href=\"#Deployments\" aria-label=\"Deployments permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>Deployments</strong></h3>\n<p>디플로이먼트는 <code class=\"language-text\">파드 생성시 파드의 상태를 정의</code>할 때 사용된다. 즉, 사용자가 파드를 생성하는 것이 아닌, 디플로이먼트를 통해 정의한대로 파드가 생성되는 것이다. 사용자는 디플로이먼트를 통해 파드를 관리하고, 설정할 수 있다. 단, 디플로이먼트는 stateless 한 앱을 배포할 때 사용되기 때문에 데이터베이스처럼 상태 유지가 필요한 앱에는 적합하지 않다.</p>\n<h3 id=\"StatefulSets\" style=\"position:relative;\"><a href=\"#StatefulSets\" aria-label=\"StatefulSets permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>StatefulSets</strong></h3>\n<p>따라서 상태 유지가 필요한 파드들은 스테이트풀세트를 통해 관리된다. 스테이트풀세트는 각 파드를 식별하기 위한 <code class=\"language-text\">고유한 이름을 지정하여 파드에 랜덤하게 접근하는 것이 아닌, 개별적으로 접근</code>할 수 있도록 한다. 또한, 영구적인 볼륨 마운트를 통해 데이터가 휘발되지 않고 보존되도록 한다.</p>\n<p> </p>\n<p> </p>\n<p> </p>\n<h2 id=\"쿠버네티스-클러스터-구성-요소\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%ED%81%B4%EB%9F%AC%EC%8A%A4%ED%84%B0-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"쿠버네티스 클러스터 구성 요소 permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>쿠버네티스 클러스터 구성 요소</strong></h2>\n<p> </p>\n<p><img src=\"/static/img4-ccb2031834ec97695159930ac0d5924a.svg\" alt=\"출처: kubernetes.io\"></p>\n<h3 id=\"Master-Process\" style=\"position:relative;\"><a href=\"#Master-Process\" aria-label=\"Master Process permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>Master Process</strong></h3>\n<p>kube-apiserver, kube-scheduler, kube-controller-manager, etcd 등의 컴포넌트가 실행된다.</p>\n<ul>\n<li><strong>kube-apiserver</strong>: <code class=\"language-text\">사용자와의 통신이 이루어지는 컴포넌트</code>로, 일종의 게이트웨이 역할을 한다. 사용자가 쿠버네티스 클러스터 내에 명령을 내리면 최초로 요청을 받고, 해당 요청의 인증이 유효한지 검증 후 적절한 컴포넌트로 요청을 전달하는 역할을 한다.</li>\n<li><strong>kube-scheduler</strong>: <code class=\"language-text\">사용자가 요청한 파드를 클러스터 내의 적절한 워커 노드에 배치</code>하는 역할을 한다. 요청을 처리할 때는 각 노드의 리소스(CPU, 메모리 등) 를 토대로 결정하며, 노드의 리소스를 가장 효율적으로 사용할 수 있도록 최적의 노드를 선택한다.</li>\n<li><strong>kube-controller-manager</strong>: 클러스터에서 여러 컨트롤러를 관리하는 컴포넌트로, <code class=\"language-text\">클러스터 상태를 유지</code>하는 역할을 한다. 파드의 상태를 모니터링하고 중단된 파드의 재배치를 스케줄러에 요청하기도 한다.</li>\n<li>\n<p><strong>etcd</strong>: 클러스터의 뇌와 같은 역할을 한다. 클러스터의 모든 변경 사항은 etcd 에 키-값 형태로 저장되는데, 이러한 데이터를 통해 <code class=\"language-text\">클러스터의 모든 구성 요소가 상태 정보를 공유하고, 변경 사항을 반영</code>할 수 있다.</p>\n<ul>\n<li>scheduler 는 etcd 에서 클러스터 상태를 읽고, 각 노드의 리소스를 확인하여 파드를 효율적으로 배치할 수 있다.</li>\n<li>controller-manager 는 etcd 에서 클러스터의 상태를 확인 후 필요한 컨트롤러에게 요청을 내리게 된다.</li>\n</ul>\n</li>\n</ul>\n<p> </p>\n<h3 id=\"Node-Process\" style=\"position:relative;\"><a href=\"#Node-Process\" aria-label=\"Node Process permalink\" class=\"heading-anchor before\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 24 24\"><path d=\"M6.188 8.719c.439-.439.926-.801 1.444-1.087 2.887-1.591 6.589-.745 8.445 2.069l-2.246 2.245c-.644-1.469-2.243-2.305-3.834-1.949-.599.134-1.168.433-1.633.898l-4.304 4.306c-1.307 1.307-1.307 3.433 0 4.74 1.307 1.307 3.433 1.307 4.74 0l1.327-1.327c1.207.479 2.501.67 3.779.575l-2.929 2.929c-2.511 2.511-6.582 2.511-9.093 0s-2.511-6.582 0-9.093l4.304-4.306zm6.836-6.836l-2.929 2.929c1.277-.096 2.572.096 3.779.574l1.326-1.326c1.307-1.307 3.433-1.307 4.74 0 1.307 1.307 1.307 3.433 0 4.74l-4.305 4.305c-1.311 1.311-3.44 1.3-4.74 0-.303-.303-.564-.68-.727-1.051l-2.246 2.245c.236.358.481.667.796.982.812.812 1.846 1.417 3.036 1.704 1.542.371 3.194.166 4.613-.617.518-.286 1.005-.648 1.444-1.087l4.304-4.305c2.512-2.511 2.512-6.582.001-9.093-2.511-2.51-6.581-2.51-9.092 0z\"/></svg></a><strong>Node Process</strong></h3>\n<p>Worker Node 라고도 하며, 실제로 컨테이너화된 앱이 실행되는 곳이다. 각 워커 노드는 여러 프로세스를 실행하며, 이를 통해 앱을 관리한다. container runtime, kube-proxy, kubelet 등의 프로세스가 실행된다.</p>\n<ul>\n<li><strong>kubelet</strong>: 각 워커 노드에서 실행되는 에이전트로, <code class=\"language-text\">파드를 실행하고 관리</code>하는 역할을 한다. kubelet 은 노드에서 실행되는 컨테이너를 관리하며, 노드와 상호작용하여 파드의 상태를 지속적으로 모니터링한다.</li>\n<li><strong>kube-proxy</strong>: 네트워크 트래픽을 처리하는 프로세스로, 클러스터 내에서 서비스와 파드 간의 통신을 관리하며 로드 밸런싱 및 포트 포워딩 등을 담당한다.</li>\n<li><strong>container runtime</strong>: 파드 내부에서 컨테이너가 실행되므로 컨테이너 런타임이 필요하다. 대표적인 예로는 Docker, containerd, CRI-O 등이 있다.</li>\n</ul>\n<p> </p>\n<p> </p>\n<p>참고: <a href=\"https://kubernetes.io/docs/home\">쿠버네티스 공식 문서</a></p>","frontmatter":{"title":"Kubernetes 구성 요소 이해하기","date":"December 15, 2024","update":"December 15, 2024","tags":["Infrastructure","Kubernetes"],"series":null},"fields":{"slug":"/understanding-kubernetes/","readingTime":{"minutes":11.79}}},"seriesList":{"edges":[{"node":{"id":"df9dfe4a-14ef-52df-8f36-06d199c90656","fields":{"slug":"/understanding-jvm/"},"frontmatter":{"title":"JVM 이해하기"}}},{"node":{"id":"d078781e-ce36-55d1-af07-598e0b000d92","fields":{"slug":"/leetcode-3sum/"},"frontmatter":{"title":"leetcode 15. 3Sum"}}},{"node":{"id":"e551e659-5a38-5541-91a6-c8ff96915d0d","fields":{"slug":"/blog-migration/"},"frontmatter":{"title":"블로그 옮기기"}}},{"node":{"id":"356ea60d-b20c-5ad8-92ea-413c2fdb3a81","fields":{"slug":"/gatsby-version-ps/"},"frontmatter":{"title":"종속성 문제 해결하기"}}},{"node":{"id":"96b29891-a242-5bbf-9728-56799a9f3cc1","fields":{"slug":"/minimum-spanning-tree/"},"frontmatter":{"title":"최소비용 신장 트리 (Minimum Spanning Tree)"}}},{"node":{"id":"3bdccf81-ee85-54e6-a829-ec21f0fcba6e","fields":{"slug":"/custom-repository/"},"frontmatter":{"title":"Custom repository 적용하기 (feat. Sequelize, TypeORM)"}}},{"node":{"id":"4f6f3366-663a-50df-aae8-f021f6b50c10","fields":{"slug":"/asynchronous-programming/"},"frontmatter":{"title":"비동기 프로그래밍"}}},{"node":{"id":"1040970d-b85f-527c-8ffa-b8a426e61197","fields":{"slug":"/boj-1181/"},"frontmatter":{"title":"input() vs sys.stdin.readline()"}}},{"node":{"id":"f7881a3e-b687-5510-8bfd-450faae1b187","fields":{"slug":"/boj-18110/"},"frontmatter":{"title":"python round() 와 반올림"}}},{"node":{"id":"e515c0a9-2a33-552f-901e-bd8b61db7c74","fields":{"slug":"/spring-container/"},"frontmatter":{"title":"스프링 컨테이너와 빈"}}},{"node":{"id":"54e07400-3ae1-5858-9c8e-4e98d0deb327","fields":{"slug":"/localstack-testing/"},"frontmatter":{"title":"Localstack 으로 DynamoDB + Lambda testing 해보기"}}},{"node":{"id":"4c97f39d-ad6a-5f1b-8e31-93d6a9853a86","fields":{"slug":"/what-is-index/"},"frontmatter":{"title":"인덱스 (Index)"}}},{"node":{"id":"6c7057c7-a535-51a9-9c95-3d394ec0c167","fields":{"slug":"/understanding-kubernetes/"},"frontmatter":{"title":"Kubernetes 구성 요소 이해하기"}}}]},"previous":{"fields":{"slug":"/quick-youtube-search-2/"},"frontmatter":{"title":"확장 프로그램에 기능 추가하기"}},"next":null},"pageContext":{"id":"6c7057c7-a535-51a9-9c95-3d394ec0c167","series":null,"previousPostId":"707c1b73-58ca-5d62-be1c-7c1588c1925d","nextPostId":null}},"staticQueryHashes":[],"slicesMap":{}}